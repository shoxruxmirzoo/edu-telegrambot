// –ü–∞–∫–µ—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤
const osmosis = require('osmosis')

// const addButton = [
// 	{ text: '‚úî –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', callback_data: 'action_search' },
// 	{ text: '‚Ü™ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', callback_data: 'action_repeat' },
// ]

module.exports = function(url, callback) {
	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ª–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã
	// function chunkArray(arr, chunk, addButtonFlag = true) {
	// 	var i,
	// 		j,
	// 		tmp = []
	// 	for (i = 0, j = arr.length; i < j; i += chunk) {
	// 		tmp.push(arr.slice(i, i + chunk))
	// 	}
	// 	if (addButtonFlag) {
	// 		return [...tmp, addButton]
	// 	}
	// 	return tmp
	// }

	// –ì–µ–Ω–µ—Ä–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç –ø–æ–Ω—è—Ç–Ω—ã–π telegram
	// function generateData(data) {
	// 	return [
	// 		{
	// 			title: '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç: üìí',
	// 			buttons: chunkArray(
	// 				data.subjects.map(function(subject, index) {
	// 					return {
	// 						text: subject,
	// 						callback_data: '0_' + data.subjectsIndex[index] + '_' + subject + '_subject',
	// 					}
	// 				}),
	// 				3,
	// 				false
	// 			),
	// 		},
	// 		{
	// 			title: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥: üìÖ',
	// 			buttons: chunkArray(
	// 				data.periods.filter(period => period !== '–í –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å').map(function(period, index) {
	// 					const param = period === '–°–µ–π—á–∞—Å' ? 'week' : 'year'
	// 					return {
	// 						text: period,
	// 						callback_data: '1_' + param + '_' + period + '_period',
	// 					}
	// 				}),
	// 				2
	// 			),
	// 		},
	// 		{
	// 			title: '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç: üí¨',
	// 			buttons: chunkArray(
	// 				data.formats.map(function(format, index) {
	// 					return {
	// 						text: format,
	// 						callback_data: '2_' + data.formatsIndex[index] + '_' + format + '_type',
	// 					}
	// 				}),
	// 				2
	// 			),
	// 		},
	// 		{
	// 			title: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å: ‚Ñπ',
	// 			buttons: chunkArray(
	// 				data.classes.map(function(classNumber, index) {
	// 					return {
	// 						text: classNumber,
	// 						callback_data: '3_' + classNumber + '_' + classNumber + '_classNumber',
	// 					}
	// 				}),
	// 				2
	// 			),
	// 		},
	// 		{
	// 			title: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: üí°',
	// 			buttons: chunkArray(
	// 				data.types.map(function(type, index) {
	// 					const param = type === '–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ' ? 'on' : ''
	// 					return {
	// 						text: type,
	// 						callback_data: '4_' + param + '_' + type + '_dist',
	// 					}
	// 				}),
	// 				2
	// 			),
	// 		},
	// 	]
	// }

	console.log(`http://www.olimpiada.ru/activities?${url}`)

	// –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ
	osmosis
		.get(`http://www.olimpiada.ru/activities?${url}`)
		.set({
			classes: ['.fav_olimp .classes_dop'],
			titles: ['.fav_olimp a:first-child .headline'],
			additionalInfo: ['.fav_olimp a .headline.red'],
			description: ['.fav_olimp .olimp_desc'],
			rating: ['.fav_olimp .pl_rating'],
			// period: ['.fav_olimp .tl_cont_f'],
		})
		.data(function(listing) {
			// –ö–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–ª–∏, –ø–µ—Ä–µ–¥–∞–µ–º –∏—Ö –æ–±—Ä–∞—Ç–Ω–æ –≤ index.js
			// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —è –æ—Ç—Ä–ø–∞–≤–ª—è—é –∏ –º–∞—Å—Å–∏–≤ –∫–ª–∞—Å—Å–æ–≤ –∏ —Ç–∏–ø–æ–≤
			// console.log(listing, listing.titles.length)
			callback({ ...listing })
			// callback(generateData({ ...listing }))
		})
}
