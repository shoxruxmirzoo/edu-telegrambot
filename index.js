// –ü–æ–¥–∫—é—á–∞–µ–º –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API Telegram
const TelegramBot = require('node-telegram-bot-api')

// process.env - —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞, –≥–¥–µ –∑–∞–ø—É—â–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const url = process.env.APP_URL || 'https://edu-telegrambot.herokuapp.com/'
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–≤–∞–ª –Ω–∞–º –±–æ—Ç.
const token = process.env.TOKEN || require('./token.js')

// –í–∫–ª—é—á–∏—Ç—å –æ–ø—Ä–æ—Å —Å–µ—Ä–≤–µ—Ä–∞
const bot = new TelegramBot(
	token,
	// –î–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞, –∑–Ω–∞—á–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É–¥–∞–ª–µ–Ω–Ω–æ, –∏ —Ç–æ–≥–¥–∞ –º—ã –º–µ–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∑–∞–ø—É—Å–∫–∞
	process.env.TOKEN
		? {
				webHook: {
					// –ü–æ—Ä—Ç –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
					port: process.env.PORT || 8000,
				},
			}
		: {
				polling: true,
			}
)

// –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—à–µ–º—É –±–æ—Ç—É —Ö—É–∫, –µ—Å–ª–∏ –∑–∞–ø—É—Å —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
process.env.TOKEN && bot.setWebHook(`${url}/bot${token}`)

// query - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–ø—Ä–æ—Å–∞, –≥–¥–µ –º—ã —Ö—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let query = {}
// –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π–≥–æ –≤–æ–ø—Ä–æ—Å–∞
const lastIndex = 4
// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–æ–ø–æ–ª—å–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
// –ë–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è, —Ç.–∫. —Ç–µ–ª–µ–≥—Ä–∞–º –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç
const maxElements = 40

// –ê—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –æ–∂–∏–¥–∞–µ–º –ø–æ–∫–∞ –ø–æ–ª—É—á–∏–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è data) –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
require('./src/getInfoForButton.js')(function(data) {
	// –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ /help
	bot.onText(/\/help/, function(msg, match) {
		chatId = msg.from.id
		bot.sendMessage(
			chatId,
			`üìß –ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, <a href="https://telegram.me/shtbik">—Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π</a>`,
			{
				parse_mode: 'html',
			}
		)
	})

	// –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å, –ø—Ä–∏ –≤–≤–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥—ã /start
	bot.onText(/\/start/, function(msg, match) {
		// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è msg —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞, –ø—Ä–∏–º–µ—Ä:
		// const msg = {
		// 	message_id: 308,
		// 	from: {
		// 		id: 144755140,
		// 		is_bot: false,
		// 		first_name: 'Alexander',
		// 		last_name: 'Shtykov',
		// 		username: 'shtbik',
		// 		language_code: 'ru-RU',
		// 	},
		// 	chatId: {
		// 		id: 144755140,
		// 		first_name: 'Alexander',
		// 		last_name: 'Shtykov',
		// 		username: 'shtbik',
		// 		type: 'private',
		// 	},
		// 	date: 1517752501,
		// 	text: '/start',
		// 	entities: [{ offset: 0, length: 6, type: 'bot_command' }],
		// }

		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
		clearUserData(msg)

		// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–Ω–¥–µ–∫—Å –≤–æ–ø—Ä–æ—Å–∞ 0, –≤—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
		newQuestion(msg, 0)
	})

	// –§—É–Ω–∫—Ü–∏—è –±–µ—Ä–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ –∏–Ω–¥–µ–∫—Å—É
	function getQuestion(indexQuestion) {
		// –î–∞–Ω–Ω—ã–µ (data) –ø—Ä–∏—Ö–æ–¥—è—Ç –∏–∑ —Ñ–∞–π–ª–∞ ./src/getInfoForButton.js
		// indexQuestion - —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–µ
		return data[indexQuestion]
	}

	// –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞ –≤ —á–∞—Ç —Å –æ—Ç—Ä–ø–∞–≤–∏—Ç–µ–ª–µ–º
	function newQuestion(msg, indexQuestion) {
		// –ü–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ –∏–Ω–¥–µ–∫—Å—É
		const question = getQuestion(indexQuestion)

		// –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–æ–ø—Ä–æ—Å–∞
		const text = question.title

		// —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –≤—ã–≤–æ–¥–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
		const options = {
			reply_markup: JSON.stringify({
				inline_keyboard: question.buttons,
				parse_mode: 'Markdown',
			}),
		}

		// –ü–æ–ª—É—á–∞–µ–º id —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
		chatId = msg.from.id

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
		bot.sendMessage(chatId, text, options)
	}

	// –í—ã–≤–æ–¥–∏—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ —Å–æ–±—Ä–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º
	// url - –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
	// cnow - —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –¥–æ–ø–æ–ª—å–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–∏
	function getOlympiadsInfo(url, msg, cnow = undefined) {
		require('./src/getInfoAboutOlimpiades.js')(url, function(data, commonCount = ['']) {
			// –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –æ–ª–∏–º–ø–∏–∞–¥
			const countOlmp = commonCount[0].replace(/\D*\s+\S+/g, '') || 0

			// –ü–æ–ª—É—á–∞–µ–º id —á–∞—Ç–∞
			chatId = msg.from.id

			// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, –ø–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞ –æ–ª–∏–º–ø–∏–∞–¥
			function additionalButton(loadmoreFlag) {
				const addButton = [{ text: '‚Ü™ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', callback_data: 'action_repeat' }]
				// –ï—Å–ª–∏ —Å—á–µ—Ç—á–∏–∫ cnow –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ countOlmp –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–π
				// –∏–ª–∏ loadmoreFlag = false, —Ç–æ –Ω–µ –≤—ã–≤–æ–¥–∏–º –¥–æ–ø. –∫–Ω–æ–ø–∫—É
				loadmoreFlag &&
					parseInt(countOlmp) > 20 &&
					cnow !== false &&
					addButton.unshift({
						text: '‚Üô –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ',
						callback_data: `action_l_${url}_${countOlmp}`,
					})

				const options = {
					reply_markup: JSON.stringify({
						inline_keyboard: [addButton],
						parse_mode: 'Markdown',
					}),
				}

				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
				bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ‚¨á', options)
			}

			// –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã –æ–ª–∏–º–ø–∏–∞–¥—ã
			data.length
				? data.forEach(function(olympiad, index) {
						bot
							.sendMessage(
								chatId,
								`${olympiad.classes ? `<b>‚Ñπ ${olympiad.classes}</b>\n\n` : ''}<a href="${
									olympiad.link
								}">üîó ${olympiad.title}</a>${
									olympiad.description ? `\n\n<b>üìö ${olympiad.description}</b>` : ''
								}${olympiad.rating ? `\n\n<b>‚≠ê ${olympiad.rating} - —Ä–µ–π—Ç–∏–Ω–≥</b>` : ''}`,
								{
									parse_mode: 'html',
									// disable_web_page_preview: true,
								}
							)
							// callback —Ñ—É–Ω–∫—Ü–∫–∏—è, –∫–æ–≥–¥–∞ –≤—ã–≤–æ–¥–∏—Ç—å –¥–æ–ø.–∫–Ω–æ–ø–∫–∏
							.then(() => {
								if (index === data.length - 1) {
									additionalButton(true)
								}
							})
					})
				: (function() {
						bot.sendMessage(chatId, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –º—ã –Ω–µ –Ω–∞—à–ª–∏ –æ–ª–∏–º–ø–∏–∞–¥').then(() => {
							additionalButton(false)
						})
					})()
		})
	}

	// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –ø–∞—Ä—Å–∏–Ω–≥—É
	function searchResult(msg) {
		// –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å
		const userData = query[`user-${msg.from.id}`]

		const { subject = {}, period = {}, type = {}, classNumber = {}, dist = {} } = userData
		const queryTitle = Object.keys(userData).map(function(key, index) {
			return userData[key].title
		})
		// console.log('Result: ', queryTitile.join(', '))

		// –§–æ—Ä–º–∏—Ä—É–µ–º url
		const url = `${subject.value}=on${dist.value ? `&dist=${dist.value}&` : ''}${
			type.value ? `&type=${type.value}` : ''
		}${classNumber.value ? `&class=${classNumber.value}` : ''}${
			period.value ? `&period=${period.value}` : ''
		}`

		chatId = msg.from.id

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		getOlympiadsInfo(url, msg)

		// –ß–∏—Å—Ç–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏
		// clearUserData(msg)
	}

	// –°–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞, —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Ü–µ–ª–µ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
	function clearUserData(msg) {
		delete query[`user-${msg.from.id}`]
	}

	// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (helper) - –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ url –≤ —Ñ–æ—Ä–º–∞—Ç JSON
	function getUrlVars(url) {
		let hash
		let myJson = {}
		const hashes = url.slice(url.indexOf('?') + 1).split('&')
		for (let i = 0; i < hashes.length; i++) {
			hash = hashes[i].split('=')
			myJson[hash[0]] = hash[1]
		}
		return myJson
	}

	// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	function checkUserData(msg) {
		return (query[`user-${msg.from.id}`] =
			query[`user-${msg.from.id}`] === undefined ? {} : query[`user-${msg.from.id}`])
	}

	// –§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞—â–∞—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –±–æ—Ç–∞
	bot.on('callback_query', function(msg) {
		// –í—ã—Ç–∞—Å–∫–∏–≤–∞—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∫–Ω–æ–ø–∫–∏
		const answer = msg.data.split('_')
		const index = answer[0]
		const button = answer[1]
		const value = answer[2]
		const param = answer[3]

		// –í—ã–≤–æ–¥–∏—Ç –ø–æ–ø–∞–ø —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
		// bot.answerCallbackQuery(msg.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏: ' + value, true)

		// –ü—Ä–æ–≤–µ–∫–∞, –µ—Å–ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–º—è—Ç–∏
		const queryUser = checkUserData(msg)

		// –°–º–æ—Ç—Ä—é —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
		if (index === 'action') {
			switch (button) {
				case 'search':
					return searchResult(msg)
				case 'repeat':
					// –ß–∏—â—É –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"
					clearUserData(msg)
					return newQuestion(msg, 0)
				// case: 'loadmore' –ø–æ—Ç–æ–º—É, —á—Ç–æ —è –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –≤ 64 –±–∞–π—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
				case 'l':
					// –ü–æ–ª—É—á–∞—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
					let urlParams = getUrlVars(value)

					// cnow - —Å—á–µ—Ç—á–∏–∫ –≤—ã–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
					let { cnow = 0 } = urlParams
					cnow = parseInt(cnow)

					// –õ–æ–≥–∏–∫–∞ –¥–æ–ø. –ø–æ–¥–≥—Ä—É–∑–∫–∏ –æ–ª–∏–º–ø–∏–∞–¥
					if (cnow) {
						if (cnow <= param - 20 && cnow <= maxElements) {
							cnow = cnow + 20
						} else {
							cnow = false
						}
					} else {
						cnow = 20
					}

					// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ JSON –≤ —Ñ–æ—Ä–º–∞–∫ url query
					let urlString = Object.entries({ ...urlParams, cnow: cnow })
						.map(e => e[0] + '=' + e[1])
						// .map(e => encodeURIComponent(e[0]) + '=' + encodeURIComponent(e[1]))
						.join('&')

					// –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ª–∏–º–ø–∏–∞–¥—ã
					return getOlympiadsInfo(urlString, msg, cnow)
				default:
			}
		} else if (index == lastIndex) {
			queryUser[param] = {
				title: value,
				value: button,
			}

			// –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
			return searchResult(msg)
		}

		// –î–æ–±–∞–≤–ª—è—é –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		queryUser[param] = {
			title: value,
			value: button,
		}

		// –í—ã–∑—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
		newQuestion(msg, parseInt(index) + 1)
	})
})
